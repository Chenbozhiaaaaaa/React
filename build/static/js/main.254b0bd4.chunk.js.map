{"version":3,"sources":["App.js","serviceWorker.js","pages/login/index.js","utils/utils.js","axios/index.js","compontents/Header/index.js","compontents/Footer/index.js","config/menuConfig.js","compontents/NavLeft/index.js","admin.js","pages/home/index.js","pages/ui/buttons.js","pages/ui/modals.js","pages/ui/loadings.js","pages/ui/notice.js","pages/ui/messages.js","pages/ui/tabs.js","pages/ui/gallery.js","pages/ui/carousel.js","pages/form/login.js","pages/form/register.js","pages/table/basicTable.js","pages/table/highTable.js","pages/city/index.js","pages/order/index.js","pages/nomatch/index.js","common.js","pages/order/detail.js","router.js","index.js"],"names":["App","this","props","children","Component","Boolean","window","location","hostname","match","Login","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pagination","data","callback","onChange","current","result","page","pageSize","page_size","total","total_count","showTotal","showQuickJumper","Axios","options","Promise","resolve","reject","JsonP","url","param","err","response","status","message","isShowLoading","document","getElementById","style","display","axios","method","baseURL","timeout","params","then","res","code","Modal","info","title","content","msg","Header","setState","userName","setInterval","sysTime","Util","getTime","getWeatherAPIData","state","get","meta","console","log","weatherCity","city","weatherDatas","wea","weatherDatash","tem1","weatherDatasl","tem2","menuType","className","span","src","alt","marginLeft","href","Footer","menuList","key","btnList","SubMenu","Menu","NavLeft","renderMenu","map","item","Item","to","menuTreeNode","MenuConfig","theme","Admin","Buttons","loading","handleCloseloading","size","handleChange","e","target","value","type","disabled","icon","shape","onClick","Group","Modals","showMadals1","showMadals2","showMadals3","showMadals4","handleOpen","handleConfirm","onOk","onCancel","visible","okText","cancelText","top","wrapClassName","Loadings","fontSize","description","tip","indicator","Notice","openNotification","direction","notification","config","placement","Messages","showMessage","TabPane","Tabs","Tab","newTabIndex","activeKey","onEdit","targetKey","action","add","panes","push","remove","lastIndex","forEach","pane","i","filter","length","defaultActiveKey","tab","panel","Meta","Card","Gallery","gutter","hoverable","width","cover","height","Carousels","autoplay","FormItem","Form","Logins","handleSubmit","uesrInfo","form","getFieldsValue","validateFields","values","success","getFieldDecorator","layout","placeholder","marginTop","initialValue","rules","required","min","max","pattern","RegExp","valuePropName","float","prefix","create","RadioGroup","Radio","Option","Select","TextArea","Input","Register","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","file","originFileObj","imageUrl","userImg","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","label","mode","moment","showTime","autoSize","minRows","maxRows","getValueFromEvent","normFile","listType","showUploadList","BasicTable","dataSource2","selectedRows","request","_this","List","index","selectedRowKeys","Utils","handleDelete","rows","ids","id","confirm","dataSource","sex","interest","birthday","address","columns","dataIndex","render","rowSelection","rowCheckSelection","bordered","margin","HighTable","filters","sorter","order","sortOrder","columns3","a","b","age","columns4","text","scroll","y","fixed","x","City","handleOpenCity","isShowOpenCity","list","requestList","item_list","cityInfo","cityForm","op_mode","arr","user_name","join","wrappedComponentRef","FilterForm","OpenCityForm","Order","orderConfirmVisble","orderInfo","requsetList","selectedItem","handleFinishOrder","onRowClick","record","selectKey","openOrderDetail","open","distance","onRow","bike_sn","battery","start_time","format","NoMatch","textAlign","Common","Detail","getDetailInfo","orderId","order_sn","mobile","start_location","end_location","IRouter","path","component","Carousel","OrderDetail","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.254b0bd4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// import { HashRouter, Switch, Route } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                this is login page\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Pagination } from \"antd\";\r\n\r\nexport default{\r\n    formateDate(time){\r\n        if(!time) return ''\r\n        let date = new Date(time)\r\n        return  date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+ ' '+ date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\r\n    },\r\n    pagination(data,callback){\r\n        return {\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.result.page,\r\n            pageSize:data.result.page_size,\r\n            total: data.result.total_count,\r\n            showTotal:()=>{\r\n                return `共${data.result.total_count}条`\r\n            },\r\n            showQuickJumper:true\r\n        }\r\n    \r\n    }\r\n}","import JsonP from 'jsonp'\r\nimport axios from 'axios'\r\nimport { Modal } from 'antd'\r\n\r\n// import { resolve, reject } from 'q'\r\nexport default class Axios{\r\n    static jsonp(options){\r\n       return new Promise((resolve,reject)=>{\r\n            JsonP(options.url,{\r\n                param:'callback'\r\n            },function(err,response){\r\n                if(response.status=='1000'){\r\n                    resolve(response)\r\n                }else{\r\n                    reject(response.message)\r\n                }\r\n            })\r\n        })\r\n    }\r\n    static axios (options){\r\n        let loading;\r\n        if(options.data && options.data.isShowLoading !==false){\r\n            loading = document.getElementById('ajaxLoading');\r\n            loading.style.display = 'block'\r\n        }\r\n        let baseApi = 'http://yapi.demo.qunar.com/mock/48900'\r\n        return new Promise((resolve,reject)=>{\r\n            axios({\r\n                url:options.url,\r\n                method:'get',\r\n                baseURL:baseApi,\r\n                timeout:5000,\r\n                params:(options.data&&options.data.params) || ''\r\n            }).then((response)=>{\r\n                if(options.data && options.data.isShowLoading !==false){\r\n                    loading = document.getElementById('ajaxLoading');\r\n                    loading.style.display = 'none'\r\n                }\r\n                if(response.status=='200'){\r\n                    let res = response.data\r\n                    if(res.code =='0'){\r\n                        resolve(res)\r\n                    }else{\r\n                       Modal.info({\r\n                           title:'提示',\r\n                           content:res.msg\r\n                       }) \r\n                    }\r\n                }else{\r\n                    reject(response.data)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport './index.css'\r\nimport Util from '../../utils/utils'\r\nimport axios from '../../axios/index'\r\nimport Axios from 'axios'\r\nexport default class Header extends Component {\r\n    componentWillMount() {\r\n        this.setState({\r\n            userName: '我的天呐'\r\n        })\r\n        setInterval(() => {\r\n            let sysTime = Util.formateDate(new Date().getTime())\r\n            this.setState({\r\n                sysTime\r\n            })\r\n        }, 1000)\r\n        this.getWeatherAPIData()\r\n    }\r\n    // 防止内存泄漏\r\n    componentWillUnmount() {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    }\r\n    getWeatherAPIData() {\r\n        let city = '北京'\r\n        // axios.jsonp({\r\n        //     url:`http://wthrcdn.etouch.cn/weather_mini?city=${city}`\r\n        // }).then(res=>{\r\n        //     if(res.status=='1000'){\r\n        //         this.setState({\r\n        //             weatherDatas:res.data.forecast[0].type,\r\n        //             weatherDatash:(res.data.forecast[0].high).substring(2),\r\n        //             weatherDatasl:(res.data.forecast[0].low).substring(2)\r\n        //         })\r\n        //     }\r\n        // })\r\n        // 这里单独引入了一个axios 因为天气接口是第三方的 封装的jsonp不能满足格式\r\n        Axios.get(`https://www.tianqiapi.com/api/?appid=58984568&appsecret=6i21A53n&version=v6&city=%E5%8C%97%E4%BA%AC`).then(res => {\r\n            let meta = res.data\r\n            console.log(meta);\r\n            if (res.status == '200') {\r\n                this.setState({\r\n                    weatherCity:meta.city,\r\n                    weatherDatas: meta.wea,\r\n                    weatherDatash: meta.tem1,\r\n                    weatherDatasl: meta.tem2\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const menuType = this.props.menuType;\r\n        return (\r\n            <div className=\"header\">\r\n                <Row className=\"header-top\">\r\n                    {\r\n                        menuType?    \r\n                            <Col span={6} className='logo'>\r\n                                <img src=\"/assets/logo.gif\" alt=\"\"/>\r\n                                <span style={{marginLeft:8}}>通用头部组件</span>\r\n                        </Col>:''\r\n                    }\r\n                    <Col span={menuType?18:24}>\r\n                        <span>欢迎，{this.state.userName}</span>\r\n                        <a href=\"\">退出</a>\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    menuType?'':\r\n                <Row className=\"breadcrumb\">\r\n                    <Col span={4} className=\"breadcrumb-title\">\r\n                        首页\r\n                    </Col>\r\n                    <Col span={20} className='weather'>\r\n                        <span className=\"date\">{this.state.sysTime}</span>\r\n                        <span className=\"date\">{this.state.weatherCity}</span>\r\n                        <span className='weather-detail'>{this.state.weatherDatas} </span>\r\n                        <span className='weather-detail'> 气温:{this.state.weatherDatash}&#176;/{this.state.weatherDatasl}&#176;</span>\r\n\r\n                    </Col>\r\n                </Row>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.css'\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                版权所有：没有版权，尴尬不？\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const menuList =[\r\n    {\r\n        title:'首页',\r\n        key:'/admin/home'\r\n    },\r\n    {\r\n        title:\"UI\",\r\n        key:\"/admin/ui\",\r\n        children:[\r\n            {\r\n                title:\"按钮\",\r\n                key:'/admin/ui/buttons',\r\n            },\r\n            {\r\n                title:'弹框',\r\n                key:'/admin/ui/modals'\r\n            },\r\n            {\r\n                title:'Loading',\r\n                key:'/admin/ui/loadings'\r\n            },\r\n            {\r\n                title:'通知提醒',\r\n                key:'/admin/ui/notification'\r\n            },\r\n            {\r\n                title:'全局Message',\r\n                key:'/admin/ui/messages'\r\n            },\r\n            {\r\n                title:'Tab页签',\r\n                key:'/admin/ui/tabs'\r\n            },\r\n            {\r\n                title:'图片画廊',\r\n                key:'/admin/ui/gallery'\r\n            },\r\n            {\r\n                title:'跑马灯',\r\n                key:'/admin/ui/carousel'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'表单',\r\n        key:'/admin/form',\r\n        children:[\r\n            {\r\n                title:'登录',\r\n                key:'/admin/form/login'\r\n            },\r\n            {\r\n                title:'注册',\r\n                key:'/admin/form/register'  \r\n            }\r\n        ]\r\n    },\r\n    ,\r\n    {\r\n        title:'表格',\r\n        key:'/admin/table',\r\n        children:[\r\n            {\r\n                title:'基础表格',\r\n                key:'/admin/table/basic'\r\n            },\r\n            {\r\n                title:'高级表格',\r\n                key:'/admin/table/high'  \r\n            }\r\n        ]\r\n    },\r\n    \r\n    {\r\n        title:'城市管理',\r\n        key:'/admin/city'\r\n    },   {\r\n        title:'订单管理',\r\n        key:'/admin/order',\r\n        btnList:[\r\n            {\r\n                title:'订单详情',\r\n                key:'detail'\r\n            },\r\n            {\r\n                title:'结束订单',\r\n                key:'finish'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'员工管理',\r\n        key:'/admin/user'\r\n    },\r\n    {\r\n        title:'车辆地图',\r\n        key:'/admin/bikeMap'\r\n    },\r\n    {\r\n        title:'图标',\r\n        key:'/admin/charts',\r\n        children:[\r\n            {\r\n                title:'柱形图',\r\n                key:'/admin/charts/bar'\r\n            },\r\n            {\r\n                title:'饼图',\r\n                key:'/admin/charts/pie'\r\n            },\r\n            {\r\n                title:'折线图',\r\n                key:'/admin/charts/line'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title:'权限设置',\r\n        key:'/admin/permission'\r\n    },\r\n]\r\n\r\nexport default menuList;\r\n\r\n","import  './index.css'\r\nimport React, { Component } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport MenuConfig from './../../config/menuConfig'\r\nimport { Menu, Icon } from 'antd'\r\nconst { SubMenu } = Menu\r\nexport default class NavLeft extends Component {\r\n    componentWillMount(){\r\n        const menuTreeNode= this.renderMenu(MenuConfig)\r\n        this.setState({\r\n            menuTreeNode\r\n        })\r\n    }\r\n    //菜单渲染\r\n    renderMenu=(data)=>{\r\n        return data.map((item)=>{\r\n            if(item.children){\r\n               return(\r\n                   <SubMenu title={item.title} key={item.key}>\r\n                    {this.renderMenu(item.children)}   \r\n                   </SubMenu>\r\n               ) \r\n            }\r\n            return  <Menu.Item title={item.title} key={item.key}>\r\n               <NavLink to={item.key}>{item.title}</NavLink> \r\n            </Menu.Item>\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"logo\">\r\n                    <h1>\r\n                        Demo\r\n                    </h1>\r\n                </div>\r\n                <Menu theme=\"dark\">\r\n                    {this.state.menuTreeNode}\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport Header from './compontents/Header/index.js'\r\nimport Footer from './compontents/Footer/index.js'\r\nimport NavLeft from './compontents/NavLeft/index.js'\r\nimport  './style/commen.css'\r\nimport Home from './pages/home'\r\nexport default class Admin extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"container\">\r\n                    <Col span={3} className=\"nav-left\">\r\n                    <NavLeft />\r\n                    </Col>\r\n                    <Col span={21} className=\"main\">\r\n                        <Header />\r\n                        <Row className=\"content\">\r\n                          {this.props.children}\r\n                        </Row>\r\n                        <Footer></Footer>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.css'\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home-wrap\">\r\n                学习的Demo主体\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Icon,Radio} from 'antd'\r\nimport   './ui.css'\r\nexport default class Buttons extends Component {\r\n    state={\r\n        loading:true\r\n    }\r\n    handleCloseloading=()=>{\r\n        this.setState({\r\n            loading:false,\r\n            size:'default'\r\n        })\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            size:e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"基础按钮\" className='card-wrap'>\r\n                    <Button type=\"primary\">button</Button>\r\n                    <Button>button</Button>\r\n                    <Button type=\"dashed\">button</Button>\r\n                    <Button type=\"danger\">button</Button>\r\n                    <Button disabled>button</Button>\r\n                </Card>\r\n                <Card title=\"图形按钮\" className='card-wrap'>\r\n                    <Button icon='plus'>创建</Button>\r\n                    <Button icon='edit'>编辑</Button>\r\n                    <Button icon='delete' type=\"dashed\">删除</Button>\r\n                    <Button shape=\"circle\" icon='search'></Button>\r\n                    <Button type=\"primary\" icon='search'>搜索</Button>\r\n                    <Button type=\"primary\" icon='download'>下载</Button>\r\n                </Card>\r\n                <Card title=\"Loaing按钮\" className='card-wrap'>\r\n                    <Button type=\"primary\"  loading={this.state.loading}>确定</Button>\r\n                    <Button type=\"primary\" shape=\"circle\" loading={this.state.loading}></Button>\r\n                    <Button loading={this.state.loading}>点击加载</Button>\r\n                    <Button  shape=\"circle\" loading={this.state.loading}></Button>\r\n                    <Button type=\"primary\" onClick={this.handleCloseloading}>关闭</Button>\r\n                </Card>\r\n                <Card title=\"按钮组\">\r\n                    <Button.Group>\r\n                        <Button type=\"primary\" >\r\n                        <Icon type=\"left\" />返回</Button>\r\n                        <Button type=\"primary\">前进<Icon type=\"right\" /></Button>\r\n                    </Button.Group>\r\n                </Card>\r\n                <Card title=\"按钮尺寸\" className='card-wrap'>\r\n                    <Radio.Group value={this.state.size} onChange={this.handleChange}>\r\n                        <Radio value='small'>小</Radio>\r\n                        <Radio value='default'>中</Radio>\r\n                        <Radio value='large'>大</Radio>\r\n                    </Radio.Group> \r\n                    <Button type=\"primary\" size={this.state.size}>button</Button>\r\n                    <Button type=\"primary\" size={this.state.size}>button</Button>\r\n                    <Button type=\"primary\" size={this.state.size}>button</Button> \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Icon,Modal} from 'antd'\r\nimport   './ui.css'\r\nexport default class Modals extends Component {\r\n    state={\r\n        showMadals1 :false,\r\n        showMadals2 :false,\r\n        showMadals3 :false,\r\n        showMadals4 :false\r\n    }\r\n    handleOpen=(type)=>{\r\n        this.setState({\r\n            [type]:true    \r\n        })\r\n    }\r\n    handleConfirm=(type)=>{\r\n        Modal[type]({\r\n            title:'确认',\r\n            content:'否是想好',\r\n            onOk(){\r\n                console.log('ok');\r\n                \r\n            },\r\n            onCancel(){\r\n                console.log('cancel');\r\n                \r\n            }\r\n\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title='基础模态框' className='card-wrap'>\r\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('showMadals1')} >Open</Button>\r\n                    <Button type=\"primary\"  onClick={()=>this.handleOpen('showMadals2')} >自定义页脚</Button>\r\n                    <Button type=\"primary\"  onClick={()=>this.handleOpen('showMadals3')} >顶部20px弹框</Button>\r\n                    <Button type=\"primary\"  onClick={()=>this.handleOpen('showMadals4')}> 水平垂直居中</Button>\r\n                </Card>\r\n                <Card title='信息确认框' className='card-wrap'>\r\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('confirm')} >Confirm</Button>\r\n                    <Button type=\"primary\"  onClick={()=>this.handleConfirm('info')} >Info</Button>\r\n                    <Button type=\"primary\"  onClick={()=>this.handleConfirm('success')} >Success</Button>\r\n                    <Button type=\"primary\"  onClick={()=>this.handleConfirm('warning')}> Warning</Button>\r\n                </Card>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showMadals1}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showMadals1:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <p>这是一个小弹窗</p>\r\n                </Modal>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showMadals2}\r\n                    okText=\"nice\"\r\n                    cancelText  =\"bad\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showMadals2:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <p>这是一个小弹窗</p>\r\n                </Modal>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showMadals3}\r\n                    okText=\"nice\"\r\n                    style={{top:20}}\r\n                    cancelText=\"bad\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showMadals3:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <p>这是一个小弹窗</p>\r\n                </Modal>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showMadals4}\r\n                    okText=\"nice\"\r\n                    cancelText=\"bad\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showMadals4:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <p>这是一个小弹窗</p>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Spin, Icon, Alert } from 'antd'\r\nimport './ui.css'\r\nexport default class Loadings extends Component {\r\n    render() {\r\n        const icon = <Icon type=\"loading\" style={{fontSize:24}} />\r\n        return (\r\n            <div>\r\n                <Card title=\"Spin的用法\" className='card-wrap'>\r\n                    <Spin size=\"small\"></Spin>\r\n                    <Spin></Spin>\r\n                    <Spin size=\"large\"></Spin>\r\n                </Card>\r\n                <Card title=\"内容遮罩\" className='card-wrap'>\r\n                    <Alert message=\"react\" type=\"info\" description=\"人间不值得\"></Alert>\r\n                    <Alert message=\"react\" type=\"warning\" description=\"人间不值得\"></Alert>\r\n                    <Spin>\r\n                        <Alert message=\"react\" type=\"warning\" description=\"人间不值得\"></Alert>\r\n                    </Spin>\r\n                    <Spin tip='搁那等会...'>\r\n                        <Alert message=\"react\" type=\"warning\" description=\"人间不值得\"></Alert>\r\n                    </Spin>\r\n                    <Spin tip='搁那等会...' indicator={icon}>\r\n                        <Alert message=\"react\" type=\"warning\" description=\"人间不值得\"></Alert>\r\n                    </Spin>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, notification , Icon, Alert } from 'antd'\r\nimport './ui.css'\r\n\r\nexport default class Notice extends Component {\r\n    openNotification=(type,direction)=>{\r\n        if(direction){\r\n            notification.config({\r\n                placement: direction,\r\n                \r\n              });\r\n        }\r\n        notification[type]({\r\n            message:'工资涨了',\r\n            description:'给你涨工资小兄弟'\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title='通知提醒框' className='card-wrap'>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('success')}}>Success</Button>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('info')}}>Info</Button>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('warning')}}>Warning</Button>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('error')}}>Error</Button>\r\n                </Card>    \r\n                <Card title='通知提醒框带方向' className='card-wrap'>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('success',\"topLeft\")}}>Success 上左</Button>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('info',\"topRight\")}}>Info 上右</Button>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('warning',\"bottomLeft\")}}>Warning 下左</Button>\r\n                    <Button type=\"primary\" onClick={()=>{this.openNotification('error',\"bottomRigh\")}}>Error 下右</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Spin, Icon, message } from 'antd'\r\nimport './ui.css'\r\n\r\nexport default class Messages extends Component {\r\n    showMessage=(type)=>{\r\n        message[type]('This is a  message')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"全局提示框\" className='card-wrap'>\r\n                    <Button type='primary' onClick={()=>{this.showMessage('success')}}>Success</Button>\r\n                    <Button type='primary' onClick={()=>{this.showMessage('info')}}>Info</Button>\r\n                    <Button type='primary' onClick={()=>{this.showMessage('warning')}}>Warning</Button>\r\n                    <Button type='primary' onClick={()=>{this.showMessage('error')}}>Error</Button>\r\n                    <Button type='primary' onClick={()=>{this.showMessage('loading')}}>Loadings</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Icon, Tabs, message } from 'antd'\r\nimport './ui.css'\r\nconst { TabPane } = Tabs;\r\nexport default class Tab extends Component {\r\n    newTabIndex=0;\r\n    componentWillMount() {\r\n        const panes = [\r\n            { title: 'Tab 1', content: 'Content of Tab 1', key: '1' },\r\n            { title: 'Tab 2', content: 'Content of Tab 2', key: '2' },\r\n            {\r\n                title: 'Tab 3',\r\n                content: 'Content of Tab 3',\r\n                key: '3'\r\n            },\r\n        ]\r\n        this.setState({\r\n            activeKey: panes[0].key,\r\n            panes,\r\n        });\r\n    }\r\n    callback = (key) => {\r\n        message.info('点击的key:' + key)\r\n    }\r\n    onChange = activeKey => {\r\n        this.setState({ activeKey });\r\n    };\r\n    onEdit = (targetKey, action) => {\r\n        this[action](targetKey);\r\n    };\r\n    add = () => {\r\n        const { panes } = this.state;\r\n        const activeKey = `newTab${this.newTabIndex++}`;\r\n        panes.push({ title: 'New Tab', content: 'Content of new Tab', key: activeKey });\r\n        this.setState({ panes, activeKey });\r\n    };\r\n    remove = targetKey => {\r\n        let { activeKey } = this.state;\r\n        let lastIndex;\r\n        this.state.panes.forEach((pane, i) => {\r\n            if (pane.key === targetKey) {\r\n                lastIndex = i - 1;\r\n            }\r\n        });\r\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n        if (panes.length && activeKey === targetKey) {\r\n            if (lastIndex >= 0) {\r\n                activeKey = panes[lastIndex].key;\r\n            } else {\r\n                activeKey = panes[0].key;\r\n            }\r\n        }\r\n        this.setState({ panes, activeKey });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"Tab标签\" className='card-wrap'>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\r\n                        <TabPane tab=\"Tab 1\" key=\"1\">\r\n                            Content of Tab Pane 1\r\n                        </TabPane>\r\n                        <TabPane tab=\"Tab 2\" key=\"2\">\r\n                            Content of Tab Pane 2\r\n                        </TabPane>\r\n                        <TabPane tab=\"Tab 3\" key=\"3\">\r\n                            Content of Tab Pane 3\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"Tab带图标签\" className='card-wrap'>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\r\n                        <TabPane tab={<span>\r\n                            <Icon type=\"apple\" />\r\n                            Tab 1\r\n                            </span>} key=\"1\">\r\n                            Content of Tab Pane 1\r\n                        </TabPane>\r\n                        <TabPane tab={\r\n                            <span>\r\n                                <Icon type=\"android\" />\r\n                                Tab 2\r\n                            </span>\r\n                        } key=\"2\">\r\n                            Content of Tab Pane 2\r\n                        </TabPane>\r\n                        <TabPane tab=\"Tab 3\" key=\"3\">\r\n                            Content of Tab Pane 3\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"Tab标签\" className='card-wrap'>\r\n                    <Tabs\r\n                        activeKey={this.state.activeKey}\r\n                        onChange={this.onChange}\r\n                        onEdit={this.onEdit}\r\n                        type=\"editable-card\">\r\n                        {\r\n                            this.state.panes.map((panel) => {\r\n                                return <TabPane\r\n                                    tab={panel.title} key={panel.key} />\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ui.css'\r\nimport { Card, Row, Col, Modal, message } from 'antd'\r\nconst { Meta } = Card;\r\nexport default class Gallery extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row gutter={10}>\r\n                    <Col span={5}>  \r\n                    <Card\r\n                        hoverable\r\n                        style={{ width: 240 }}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"这是一个美女\" description=\"这个美女有大长腿\" />\r\n                    </Card>\r\n                    <Card\r\n                        hoverable\r\n                        style={{ height: 140 ,width: 240}}\r\n                        cover={<img style={{ height: 140 ,width: 240}} alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"这是一个美女6\" description=\"这个美女有大长腿\" />\r\n                    </Card>\r\n                    </Col>\r\n                    <Col span={5}>  \r\n                    <Card\r\n                        hoverable\r\n                        style={{ width: 240 }}\r\n                        cover={<img style={{ height: 340 ,width: 240}}  alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"这是一个美女1\" description=\"这个美女有大长腿\" />\r\n                    </Card></Col>\r\n                    <Col span={5}>  <Card\r\n                        hoverable\r\n                        style={{ width: 240 }}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"这是一个美女2\" description=\"这个美女有大长腿\" />\r\n                    </Card></Col>\r\n                    <Col span={5}>  <Card\r\n                        hoverable\r\n                        style={{ width: 240 }}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"这是一个美女3\" description=\"这个美女有大长腿\" />\r\n                    </Card></Col>\r\n                    <Col span={4}>  \r\n                    <Card\r\n                        hoverable\r\n                        style={{ width: 240 }}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"这是一个美女4\" description=\"这个美女有大长腿\" />\r\n                    </Card></Col>\r\n                </Row>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ui.css'\r\nimport { Card, Row, Col, Modal, Carousel  } from 'antd'\r\nconst { Meta } = Card;\r\nexport default class Carousels extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title='文字轮播'>\r\n                    <Carousel autoplay>\r\n                        <div>\r\n                            <h3>窗前明月光</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3>疑是地上霜</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3>举头邀明月</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3>低头思故乡</h3>\r\n                        </div>\r\n                    </Carousel>\r\n                </Card>      \r\n                <Card title='图片轮播 没有合适的图'>\r\n                    <Carousel autoplay className=\"slider-wrap\">\r\n                        <div>\r\n                           <img src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" alt=\"\"/>\r\n                        </div>\r\n                        <div>\r\n                        <img src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" alt=\"\"/>\r\n\r\n                        </div>\r\n                        <div>\r\n                        <img src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" alt=\"\"/>\r\n\r\n                        </div>\r\n                        <div>\r\n                        <img src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" alt=\"\"/>\r\n\r\n                        </div>\r\n                    </Carousel>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Icon, Input, Form, message,Checkbox } from 'antd'\r\nconst FormItem = Form.Item\r\nclass Logins extends Component {\r\n    handleSubmit = () => {\r\n        let uesrInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                message.success(`${uesrInfo.userName}通过验证！`)\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Card title=\"登录内联表单\">\r\n                    <Form layout=\"inline\">\r\n                        <FormItem>\r\n                            <Input placeholder=\"请输入用户名\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Input placeholder=\"请输入密码\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" >登录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"登录水平表单\" style={{ marginTop: 10 }}>\r\n                    <Form layout=\"horizontal\" style={{ width: 300 }}>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('userName', {\r\n                                    initialValue: 'jack',\r\n                                    rules: [{ required: true, message: 'Please input your username!' }],\r\n                                })(<Input placeholder=\"请输入用户名\" />)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('userPwd', {\r\n                                    initialValue: 'w123456',\r\n                                    rules: [\r\n                                        { required: true, message: 'Please input your username!' },\r\n                                        { min: 5, max: 11, message: '长度不满足要求!' },\r\n                                        { pattern: new RegExp('^\\\\w+$', 'g'), message: '只能是字母或者数字!' },\r\n                                    ],\r\n                                })(<Input type=\"password\" placeholder=\"请输入密码\" />)\r\n                            }\r\n                        </FormItem>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(<Checkbox>Remember me</Checkbox>)}\r\n                            <a style={{float:'right'}} className=\"login-form-forgot\" href=\"\">\r\n                                Forgot password\r\n                                </a>\r\n                        </Form.Item>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"带图标的表单\" style={{ marginTop: 10 }}>\r\n                    <Form layout=\"inline\">\r\n                        <FormItem>\r\n                            <Input prefix={<Icon type=\"user\"></Icon>} placeholder=\"请输入用户名\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Input prefix={<Icon type=\"lock\"></Icon>} placeholder=\"请输入密码\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" >登录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(Logins);","import React, { Component } from 'react'\r\nimport { Card, Button,InputNumber, Icon, Input, Form, message, Checkbox, Switch, Radio, Select, DatePicker, TimePicker, Upload } from 'antd'\r\nimport moment from 'moment'\r\nconst FormItem = Form.Item\r\nconst RadioGroup = Radio.Group\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n class Register extends Component {\r\n     getBase64=(img, callback)=> {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n      }\r\n      handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n          // Get this url from response in real world.\r\n          this.getBase64(info.file.originFileObj, imageUrl =>\r\n            this.setState({\r\n                userImg:imageUrl,\r\n              loading: false,\r\n            }),\r\n          );\r\n        }\r\n      }\r\n      handleSubmit=()=>{\r\n        let uesrInfo = this.props.form.getFieldsValue();\r\n        \r\n      }\r\n      state={}\r\n    render() {\r\n     \r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                xs:24,\r\n                sm:4,\r\n\r\n            },\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:12,\r\n            }\r\n        }\r\n        const offsetLayout={\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:{\r\n                    span:12,\r\n                    offset:4\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title='注册表单'>\r\n                    <Form>\r\n                        <FormItem label=\"用户名\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userName', {\r\n                                    initialValue: 'jack',\r\n                                    rules: [{ required: true, message: 'Please input your username!' }],\r\n                                })(<Input placeholder=\"请输入用户名\" />)\r\n                            }\r\n                        </FormItem>                        \r\n                        <FormItem label=\"密码\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userPwd', {\r\n                                    initialValue: '',\r\n                                    rules: [{ required: true, message: 'Please input your userPwd!' }],\r\n                                })(<Input placeholder=\"请输入密码\" />)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"性别\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('sex', {\r\n                                    initialValue: '1',\r\n                                })(<RadioGroup>\r\n                                    <Radio value=\"1\">男</Radio>\r\n                                    <Radio value=\"2\">女</Radio>     \r\n                                </RadioGroup>)\r\n                            }\r\n                        </FormItem>            \r\n                        <FormItem label=\"年龄\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('age', {\r\n                                    initialValue: '18',\r\n                                })(<InputNumber min={1} max={10} />)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"当前状态\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('state', {\r\n                                    initialValue: '1',\r\n                                })(<Select>\r\n                                    <Option value=\"1\">高级前端</Option>\r\n                                    <Option value=\"2\">中级前端</Option>\r\n                                    <Option value=\"3\">搬砖前端</Option>\r\n                                    <Option value=\"4\">垃圾前端</Option>\r\n                                </Select>)\r\n                            }\r\n                        </FormItem>      \r\n                        <FormItem label=\"爱好\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('interest', {\r\n                                    initialValue: ['1','3'],\r\n                                })(<Select mode='multiple'>\r\n                                    <Option value=\"1\">编程</Option>\r\n                                    <Option value=\"2\">学习</Option>\r\n                                    <Option value=\"3\">篮球</Option>\r\n                                    <Option value=\"4\">K歌</Option>\r\n                                    <Option value=\"5\">骑行</Option>\r\n                                </Select>)\r\n                            }\r\n                        </FormItem>               \r\n                        <FormItem label=\"是否帅气\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('switch', {\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: true,\r\n\r\n                                })(<Switch  />)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"生日\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('data', {\r\n                                    \r\n                                    initialValue: moment('2018-8-8'),\r\n\r\n                                })( <DatePicker \r\n                                    style={{ width: '100%' }}\r\n                                    showTime\r\n                                    />)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"联系地址\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('address', {\r\n                                    \r\n                                    initialValue: '北京市丰台区',\r\n\r\n                                })( <TextArea\r\n                                    autoSize={{ minRows: 2, maxRows: 6 }}\r\n                                    />)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"头像\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg',\r\n                                {\r\n                                    valuePropName: 'fileList',\r\n                                    getValueFromEvent: this.normFile,\r\n                                  })(<Upload  \r\n                                    listType=\"picture-card\"\r\n                                    showUploadList={false}\r\n                                    onChange={this.handleChange}\r\n                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                > \r\n                                {this.state.userImg?<img src={this.state.userImg}/>:<Icon type=\"plus\" />}\r\n                                </Upload>)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem  {...offsetLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg',{\r\n                                    valuePropName: 'checked',\r\n\r\n                                })(\r\n                                    <Checkbox >我已经阅读过<a href=\"#\">安全协议</a></Checkbox>\r\n                            )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem  {...offsetLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg')(\r\n                                    <Button type='primary' onClick={this.handleSubmit}>注册</Button>\r\n                            )\r\n                            }\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(Register);","import React, { Component } from 'react'\r\nimport { Card, Table, Modal ,Button,message} from 'antd'\r\nimport Utils from './../../utils/utils';\r\nimport axios from './../../axios/index'\r\n\r\nexport default class BasicTable extends Component {\r\n    // 定义数据源\r\n    state = {\r\n        dataSource2: [],\r\n        selectedRows:[]\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount() {\r\n        const dataSource = [\r\n            {\r\n                id: '0',\r\n                key: '',\r\n                userName: 'jack',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-1-1',\r\n                address: '北京市丰台区',\r\n                time: '9:00'\r\n            }\r\n        ]\r\n        this.setState({\r\n            dataSource\r\n        })\r\n        this.request()\r\n    }\r\n    // 动态获取数据\r\n    request = ()=>{\r\n        let _this = this;\r\n        axios.axios({\r\n            url:'/table/list',\r\n            data:{\r\n                params:{\r\n                    page:this.params.page\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == 0){\r\n                console.log(res);\r\n                \r\n                res.result.List.map((item, index) => {\r\n                    item.key = index;\r\n                })\r\n                this.setState({\r\n                    dataSource2:res.result.List,\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null,\r\n                    pagination: Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n    handleDelete=()=>{ \r\n        let rows =  this.state.selectedRows\r\n        let ids =[]\r\n        rows.map((item)=>{\r\n            ids.push(item.id)\r\n        })\r\n        Modal.confirm({\r\n            title:'删除提示',\r\n            content:'确定要删除吗',\r\n            onOk:()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    \r\n       \r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1?'男':'女'\r\n                },\r\n            }\r\n            ,\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config ={\r\n                        '1':'搬砖工程师',\r\n                        '2':'基础码农',\r\n                        '3':'初级工程师',\r\n                        '4':'中级大佬',\r\n                        '5':'框架级大佬'\r\n                    }\r\n                    return config[state]\r\n                },\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                render(interest) {\r\n                    let config ={\r\n                        '1':'编程',\r\n                        '2':'打蓝球',\r\n                        '3':'群里吹水',\r\n                        '4':'钻研技术',\r\n                        '5':'读书',\r\n                        '6':'写字',\r\n                        '7':'桌球'\r\n                    }\r\n                    return config[interest]\r\n                },\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                dataIndex: 'time'\r\n            }\r\n        ]\r\n        const rowSelection ={\r\n            type:'radio',\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                Modal.info({\r\n                    title:'信息',\r\n                    content:`姓名:${selectedRows[0].userName},用户id:${selectedRows[0].id}`\r\n                })\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n              },\r\n        }\r\n        const rowCheckSelection ={\r\n            type:'checkbox',\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows\r\n                })\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n              },\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"基础表格\">\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"动态数据渲染表格\" style={{ margin: '10px 0' }}>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"mock-单选按钮表格\" style={{ margin: '10px 0' }}>\r\n                    <Table\r\n                        rowSelection={rowSelection}\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"mock-复选按钮表格\" style={{ margin: '10px 0' }}>\r\n                    <Button type='primary' onClick={this.handleDelete}>删除</Button>\r\n                    <Table\r\n                        rowSelection={rowCheckSelection}\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"mock-表格分页\" style={{ margin: '10px 0' }}>\r\n                    <Table\r\n                   \r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Modal, Button, message, Badge } from 'antd';\r\nimport axios from './../../axios/index'\r\nimport Utils from './../../utils/utils';\r\nexport default class HighTable extends Component {\r\n    state = {\r\n        dataSource: [],\r\n        selectedRows: []\r\n    }\r\n    params = {\r\n        page: 1\r\n    }\r\n    componentDidMount() {\r\n        this.request()\r\n    }\r\n    request = () => {\r\n        let _this = this;\r\n        axios.axios({\r\n            url: '/table/high/list',\r\n            data: {\r\n                params: {\r\n                    page: this.params.page\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                res.result.List.map((item, index) => {\r\n                    item.key = index;\r\n                })\r\n                this.setState({\r\n                    dataSource: res.result.List,\r\n                })\r\n            }\r\n        })\r\n    }\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log(\"::\" + sorter.order)\r\n        this.setState({\r\n            sortOrder: sorter.order\r\n        })\r\n    }\r\n    handleDelete = (item)=>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:'确认',\r\n            content:'您确认要删除此条数据吗？',\r\n            onOk:()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                },\r\n            }\r\n            ,\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '搬砖工程师',\r\n                        '2': '基础码农',\r\n                        '3': '初级工程师',\r\n                        '4': '中级大佬',\r\n                        '5': '框架级大佬'\r\n                    }\r\n                    return config[state]\r\n                },\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                render(interest) {\r\n                    let config = {\r\n                        '1': '编程',\r\n                        '2': '打蓝球',\r\n                        '3': '群里吹水',\r\n                        '4': '钻研技术',\r\n                        '5': '读书',\r\n                        '6': '写字',\r\n                        '7': '桌球'\r\n                    }\r\n                    return config[interest]\r\n                },\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                dataIndex: 'time'\r\n            }\r\n        ]\r\n        const columns2 = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                fixed: 'left',\r\n                width: 100,\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName',\r\n                fixed: 'left',\r\n                width: 100,\r\n\r\n            }, {\r\n                title: '用户名1',\r\n                dataIndex: 'userName1'\r\n            }, {\r\n                title: '用户名2',\r\n                dataIndex: 'userName2'\r\n            }, {\r\n                title: '用户名3',\r\n                dataIndex: 'userName3'\r\n            }, {\r\n                title: '用户名4',\r\n                dataIndex: 'userName4'\r\n            }, {\r\n                title: '用户名5',\r\n                dataIndex: 'userName5'\r\n            }, {\r\n                title: '用户名6',\r\n                dataIndex: 'userName6'\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                },\r\n            }\r\n            ,\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '搬砖工程师',\r\n                        '2': '基础码农',\r\n                        '3': '初级工程师',\r\n                        '4': '中级大佬',\r\n                        '5': '框架级大佬'\r\n                    }\r\n                    return config[state]\r\n                },\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                render(interest) {\r\n                    let config = {\r\n                        '1': '编程',\r\n                        '2': '打蓝球',\r\n                        '3': '群里吹水',\r\n                        '4': '钻研技术',\r\n                        '5': '读书',\r\n                        '6': '写字',\r\n                        '7': '桌球'\r\n                    }\r\n                    return config[interest]\r\n                },\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                dataIndex: 'time'\r\n            }\r\n        ]\r\n        const columns3 = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                },\r\n            },\r\n            {\r\n                title: '年龄',\r\n                dataIndex: 'age',\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: this.state.sortOrder\r\n            }\r\n            ,\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '搬砖工程师',\r\n                        '2': '基础码农',\r\n                        '3': '初级工程师',\r\n                        '4': '中级大佬',\r\n                        '5': '框架级大佬'\r\n                    }\r\n                    return config[state]\r\n                },\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                render(interest) {\r\n                    let config = {\r\n                        '1': '编程',\r\n                        '2': '打蓝球',\r\n                        '3': '群里吹水',\r\n                        '4': '钻研技术',\r\n                        '5': '读书',\r\n                        '6': '写字',\r\n                        '7': '桌球'\r\n                    }\r\n                    return config[interest]\r\n                },\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                dataIndex: 'time'\r\n            }\r\n        ]\r\n        const columns4 = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex == 1 ? '男' : '女'\r\n                },\r\n            }\r\n            ,\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': '搬砖工程师',\r\n                        '2': '基础码农',\r\n                        '3': '初级工程师',\r\n                        '4': '中级大佬',\r\n                        '5': '框架级大佬'\r\n                    }\r\n                    return config[state]\r\n                },\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                render(interest) {\r\n                    let config = {\r\n                        '1': <Badge text=\"编程\" status=\"success\" />,\r\n                        '2': <Badge text=\"打蓝球\" status=\"success\" />,\r\n                        '3': <Badge text=\"群里吹水\" status=\"error\" />,\r\n                        '4': <Badge text=\"钻研技术\" status=\"success\" />,\r\n                        '5': <Badge text=\"读书\" status=\"default\" />,\r\n                        '6': <Badge text=\"写字\" status=\"success\" />,\r\n                        '7': <Badge text=\"桌球\" status=\"warings\" />\r\n                    }\r\n                    return config[interest]\r\n                },\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                render:(text,item)=>{\r\n                    return <Button size=\"small\" onClick={(item) => { this.handleDelete(item) }}>删除</Button>\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card title=\"头部固定\">\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                        scroll={{ y: 240 }}\r\n                    />\r\n                </Card>\r\n                <Card title=\"左侧固定\" style={{ margin: '10px 0' }}>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns2}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                        scroll={{ x: 2500 }}\r\n                    />\r\n                </Card>\r\n                <Card title=\"表格排序\" style={{ margin: '10px 0' }}>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns3}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </Card>\r\n                <Card title=\"操作\" style={{ margin: '10px 0' }}>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns4}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Modal, Select, Button, message, Form ,DatePicker} from 'antd'\r\nimport axios from './../../axios/index'\r\nimport Utils from './../../utils/utils';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nconst { Option } = Select;\r\n\r\nexport default class City extends Component {\r\n    componentDidMount() {\r\n        this.requestList()\r\n    }\r\n    handleOpenCity = () => {\r\n        this.setState({\r\n            isShowOpenCity: true\r\n\r\n        })\r\n    }\r\n    state = {\r\n        list: [],\r\n        isShowOpenCity: false\r\n    }\r\n    params = {\r\n        page: 1\r\n    }\r\n    requestList = () => {\r\n        let _this = this\r\n        axios.axios({\r\n            url: '/open_city',\r\n            data: {\r\n                params: {\r\n                    page: this.params.page\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            let list = res.result.item_list.map((item, index) => {\r\n                item.key = index;\r\n                return item;\r\n            });\r\n            this.setState({\r\n                list: list,\r\n                pagination: Utils.pagination(res, (current) => {\r\n                    _this.params.page = current;\r\n                    _this.requestList();\r\n                })\r\n            })\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\r\n        axios.axios({\r\n            url:\"/city/open\",\r\n            data:{\r\n                param:cityInfo\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code==0){\r\n                message.success(res.result)\r\n                this.setState({\r\n                    isShowOpenCity:false\r\n                })\r\n                this.requestList()\r\n            }\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '城市ID',\r\n                dataIndex: 'id'\r\n            }, {\r\n                title: '城市名称',\r\n                dataIndex: 'name'\r\n            }, {\r\n                title: '用车模式',\r\n                dataIndex: 'mode',\r\n                render(mode) {\r\n                    return mode == 1 ? '停车点' : '禁停区';\r\n                }\r\n            }, {\r\n                title: '营运模式',\r\n                dataIndex: 'op_mode',\r\n                render(op_mode) {\r\n                    return op_mode == 1 ? '自营' : '加盟';\r\n                }\r\n            }, {\r\n                title: '授权加盟商',\r\n                dataIndex: 'franchisee_name'\r\n            }, {\r\n                title: '城市管理员',\r\n                dataIndex: 'city_admins',\r\n                render(arr) {\r\n                    return arr.map((item) => {\r\n                        return item.user_name;\r\n                    }).join(',');\r\n                }\r\n            }, {\r\n                title: '城市开通时间',\r\n                dataIndex: 'open_time'\r\n            }, {\r\n                title: '操作时间',\r\n                dataIndex: 'update_time',\r\n                render: Utils.formateDate\r\n            }, {\r\n                title: '操作人',\r\n                dataIndex: 'sys_user_name'\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <FilterForm />\r\n                </Card>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\r\n                </Card>\r\n                <div className='content-wrap'>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title=\"开通城市\"\r\n                    visible={this.state.isShowOpenCity}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            isShowOpenCity: false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleSubmit}\r\n                >\r\n                    <OpenCityForm wrappedComponentRef={(form)=>{this.cityForm = form}}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass FilterForm extends Component {\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form layout=\"inline\">\r\n                <FormItem label='城市'>\r\n                    {\r\n                        getFieldDecorator('city_id')(\r\n                            <Select placeholder='全部' style={{ width: '80px' }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">北京</Option>\r\n                                <Option value=\"2\">上海</Option>\r\n                                <Option value=\"3\">深圳</Option>\r\n                                <Option value=\"4\">广州</Option>\r\n                            </Select>)\r\n                    }\r\n                </FormItem>\r\n                <FormItem label='用车模式'>\r\n                    {\r\n                        getFieldDecorator('mode')(\r\n                            <Select placeholder='全部' style={{ width: '80px' }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">指定停车点模式</Option>\r\n                                <Option value=\"2\">禁止停车点模式</Option>\r\n                            </Select>)\r\n                    }\r\n                </FormItem>\r\n                <FormItem label='营运模式'>\r\n                    {\r\n                        getFieldDecorator('op_mode')(\r\n                            <Select placeholder='全部' style={{ width: '80px' }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">自营</Option>\r\n                                <Option value=\"2\">加盟</Option>\r\n                            </Select>)\r\n                    }\r\n                </FormItem>\r\n                <FormItem label='加盟商授权状态'>\r\n                    {\r\n                        getFieldDecorator('auth_status')(\r\n                            <Select placeholder='全部' style={{ width: '80px' }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">已授权</Option>\r\n                                <Option value=\"2\">未授权</Option>\r\n                            </Select>)\r\n                    }\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type='primary' style={{ margin: '0 20px' }}>查询</Button>\r\n                    <Button>重置</Button>\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nFilterForm = Form.create({})(FilterForm)\r\n\r\nclass OpenCityForm extends Component {\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                span: 5\r\n            },\r\n            wrapperCol: {\r\n                span: 19\r\n            }\r\n        }\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"选择城市\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('city_id', {\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">北京市</Option>\r\n                                <Option value=\"2\">天津市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"营运模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('op_mode', {\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"1\">自营</Option>\r\n                                <Option value=\"2\">加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"用车模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('use_mode', {\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"1\">指定停车点</Option>\r\n                                <Option value=\"2\">禁停区</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nOpenCityForm = Form.create({})(OpenCityForm)","import React, { Component } from 'react'\r\nimport { Card, Table, Modal, Select, Button, message, Form, DatePicker } from 'antd'\r\nimport axios from './../../axios/index'\r\nimport Utils from './../../utils/utils';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nconst { Option } = Select;\r\n\r\nexport default class Order extends Component {\r\n    state = {\r\n        orderConfirmVisble: false,\r\n        orderInfo: {},  \r\n    }\r\n    param = {\r\n        page: 1\r\n    }\r\n    componentDidMount() {\r\n        this.requsetList()\r\n    }\r\n    requsetList = () => {\r\n        let _this = this\r\n        axios.axios({\r\n            url: \"/order/list\",\r\n            data: {\r\n                param: this.param.page\r\n            }\r\n        }).then((res) => {\r\n            let list = res.result.item_list.map((item, index) => {\r\n                item.key = index;\r\n                return item;\r\n            });\r\n            this.setState({\r\n                list: list,\r\n                pagination: Utils.pagination(res, (current) => {\r\n                    _this.params.page = current;\r\n                    _this.requestList();\r\n                })\r\n            })\r\n        })\r\n    }\r\n    handleConfirm = () => {\r\n        // 拿到id 请求后台数据\r\n        let id = this.state.selectedItem.id;\r\n        console.log(this.state.selectedItem);\r\n        \r\n        if(!id){\r\n            Modal.info({\r\n                title:'信息',\r\n                content:'请选择一条订单'\r\n            })\r\n            return\r\n        }\r\n        axios.axios({\r\n            url: '/order/ebike_info',\r\n            data: {\r\n                param: id\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                this.setState({\r\n                    orderInfo: res.result,\r\n                    orderConfirmVisble: true\r\n                })\r\n            }\r\n        }\r\n\r\n        )\r\n    }\r\n    handleFinishOrder = () => {\r\n        let id = this.state.selectedItem.id;\r\n        axios.axios({\r\n            url: '/order/finish_order',\r\n            data: {\r\n                param: id\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success(res.result)\r\n                this.setState({\r\n                    orderConfirmVisble: false\r\n                })\r\n                this.requsetList()\r\n            }\r\n        }\r\n\r\n        )\r\n    }\r\n    onRowClick = (record,index)=>{\r\n        let selectKey=[index]\r\n        console.log(record,index);\r\n        this.setState({\r\n            selectedRowKeys:selectKey,\r\n            selectedItem:record\r\n        })\r\n    }\r\n    openOrderDetail=()=>{\r\n              // 拿到id 请求后台数据\r\n              let item = this.state.selectedItem;\r\n              console.log(this.state.selectedItem);\r\n              \r\n              if(!item){\r\n                  Modal.info({\r\n                      title:'信息',\r\n                      content:'请选择一条订单'\r\n                  })\r\n                  return\r\n              }\r\n              window.open(`/#/common/order/detail/${item.id}`,'_blank')\r\n            //   window.location.href =`/#/common/order/detail/${item.id}`\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '订单编号',\r\n                dataIndex: 'order_sn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bike_sn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'user_name'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance) {\r\n                    return distance / 1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'total_time'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n                render(status) {\r\n                    return status == 1 ? '进行中' : '结束行程'\r\n                },\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'start_time'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'end_time'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'total_fee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'user_pay'\r\n            }\r\n        ]\r\n        const formItemLayout = {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 },\r\n        }\r\n        const  selectedRowKeys = this.state.selectedRowKeys\r\n        const rowSelection ={\r\n            type:'radio',\r\n            selectedRowKeys\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <FilterForm />\r\n                </Card>\r\n                <Card style={{ marginTop: 10 }}>\r\n                    <Button type='primary' onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type='primary' style={{ marginLeft: 10 }} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                        rowSelection={rowSelection}\r\n                        onRow={(record,index)=>{\r\n                            return {\r\n                                onClick:()=>{\r\n                                    this.onRowClick(record,index)\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title='结束订单'\r\n                    visible={this.state.orderConfirmVisble}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            orderConfirmVisble: false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleFinishOrder}\r\n                    width={600}\r\n                >\r\n                    <Form layout='horizontal'>\r\n                        <FormItem label='车辆编号' {...formItemLayout}>\r\n                            {this.state.orderInfo.bike_sn}\r\n                        </FormItem>\r\n                        <FormItem label='剩余电量' {...formItemLayout}>\r\n                            {this.state.orderInfo.battery + '%'}\r\n                        </FormItem>\r\n                        <FormItem label='行程开始时间' {...formItemLayout}>\r\n                            {this.state.orderInfo.start_time}\r\n                        </FormItem>\r\n                        <FormItem label='当前位置' {...formItemLayout}>\r\n                            {this.state.orderInfo.location}\r\n                        </FormItem>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass FilterForm extends Component {\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form layout=\"inline\">\r\n                <FormItem label='城市'>\r\n                    {\r\n                        getFieldDecorator('city_id')(\r\n                            <Select placeholder='全部' style={{ width: '80px' }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">北京</Option>\r\n                                <Option value=\"2\">上海</Option>\r\n                                <Option value=\"3\">深圳</Option>\r\n                                <Option value=\"4\">广州</Option>\r\n                            </Select>)\r\n                    }\r\n                </FormItem>\r\n                <FormItem label='订单时间'>\r\n                    {\r\n                        getFieldDecorator('start_time')(\r\n                            <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />,\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem >\r\n                    {\r\n                        getFieldDecorator('end_time')(\r\n                            <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />,\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label='订单状态'>\r\n                    {\r\n                        getFieldDecorator('op_mode')(\r\n                            <Select placeholder='全部' style={{ width: '80px' }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">进行中</Option>\r\n                                <Option value=\"2\">结束行程</Option>\r\n                            </Select>)\r\n                    }\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                    <Button type='primary' style={{ margin: '0 20px' }}>查询</Button>\r\n                    <Button>重置</Button>\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nFilterForm = Form.create({})(FilterForm)","import React, { Component } from 'react'\r\n\r\nexport default class NoMatch extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\",fontSize:'24px'}}>\r\n                404 NOT FOUND!!!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Row,Col} from 'antd'\r\nimport Header from './compontents/Header'\r\nimport   './style/commen.css'\r\nexport default class Common extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className='simple-page'>\r\n                    <Header menuType=\"second\" />\r\n                </Row>\r\n                <Row className='content'>\r\n                    {this.props.children}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Modal, Select, Button, message, Form, DatePicker } from 'antd'\r\nimport axios from './../../axios/index'\r\nimport   '../../style/commen.css'\r\nimport   './detail.css'\r\nimport Utils from './../../utils/utils';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nconst { Option } = Select;\r\nexport default class Detail extends Component {\r\n    state={\r\n\r\n    }\r\n    componentDidMount(){\r\n        let orderId = this.props.match.params.orderId\r\n        if(orderId){\r\n            this.getDetailInfo(orderId)\r\n        }\r\n    }\r\n    getDetailInfo = (orderId) =>{\r\n        axios.axios({\r\n            url:'/order/detail',\r\n            data:{\r\n                params:{\r\n                    orderId:orderId\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code==0){\r\n                this.setState({\r\n                    orderInfo:res.result\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const info = this.state.orderInfo || {}\r\n        return (\r\n            <div>\r\n                <Card>\r\n                <div id=\"orderDetailMap\" className=\"order-map\"></div>\r\n                <div className=\"detail-items\">\r\n                        <div className=\"item-title\">基础信息</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用车模式</div>\r\n                                <div className=\"detail-form-content\">{info.mode == 1 ?'服务区':'停车点'}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">订单编号</div>\r\n                                <div className=\"detail-form-content\">{info.order_sn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">车辆编号</div>\r\n                                <div className=\"detail-form-content\">{info.bike_sn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用户姓名</div>\r\n                                <div className=\"detail-form-content\">{info.user_name}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">手机号码</div>\r\n                                <div className=\"detail-form-content\">{info.mobile}</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">行驶轨迹</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程起点</div>\r\n                                <div className=\"detail-form-content\">{info.start_location}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程终点</div>\r\n                                <div className=\"detail-form-content\">{info.end_location}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行驶里程</div>\r\n                                <div className=\"detail-form-content\">{info.distance/1000}公里</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport App from './App'\r\nimport Login from './pages/login'\r\nimport Admin from './admin'\r\nimport Buttons from './pages/ui/buttons.js'\r\nimport Modals from './pages/ui/modals.js'\r\nimport Loadings from './pages/ui/loadings.js'\r\nimport Notice from './pages/ui/notice.js'\r\nimport Messages from './pages/ui/messages.js'\r\nimport Tab from './pages/ui/tabs.js'\r\nimport Gallery from './pages/ui/gallery.js'\r\nimport Carousel from './pages/ui/carousel.js'\r\nimport Logins from './pages/form/login'\r\nimport Register from './pages/form/register'\r\nimport BasicTable from './pages/table/basicTable'\r\nimport HighTable from './pages/table/highTable'\r\nimport City from './pages/city/index'\r\nimport Order from './pages/order/index'\r\nimport NoMatch from './pages/nomatch'\r\nimport Common from './common'\r\nimport OrderDetail from './pages/order/detail'\r\n\r\nexport default class IRouter extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <App>\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/admin\" render={() =>\r\n                        <Admin>\r\n                            <Switch>\r\n                                <Route path=\"/admin/ui/buttons\" component={Buttons} />\r\n                                <Route path=\"/admin/ui/modals\" component={Modals} />\r\n                                <Route path=\"/admin/ui/loadings\" component={Loadings} />\r\n                                <Route path=\"/admin/ui/notification\" component={Notice} />\r\n                                <Route path=\"/admin/ui/messages\" component={Messages} />\r\n                                <Route path=\"/admin/ui/tabs\" component={Tab} />\r\n                                <Route path=\"/admin/ui/gallery\" component={Gallery} />\r\n                                <Route path=\"/admin/ui/carousel\" component={Carousel} />\r\n                                <Route path=\"/admin/form/login\" component={Logins} />\r\n                                <Route path=\"/admin/form/register\" component={Register} />\r\n                                <Route path=\"/admin/table/basic\" component={BasicTable} />\r\n                                <Route path=\"/admin/table/high\" component={HighTable} />\r\n                                <Route path=\"/admin/city\" component={City} />\r\n                                <Route path=\"/admin/order\" component={Order} />\r\n                                <Route component={NoMatch} />\r\n                            </Switch>\r\n                        </Admin>\r\n                    } />\r\n                    <Route path=\"/common\" render={()=>\r\n                        <Common>\r\n                            <Route  path=\"/common/order/detail/:orderId\" component={OrderDetail}/>\r\n                        </Common>\r\n                    }\r\n                    />\r\n                    {/* <Route path=\"/order/detail\" component={Admin} /> */}\r\n                </App>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router'\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}